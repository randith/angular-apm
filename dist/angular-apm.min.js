(function(e){"use strict";e.module("perfMonitor",[]).provider("perfMonitor",function(){function n(){a={},d=[],s=0,l=void 0,c=void 0}function r(e,r,o){if(0===d.length&&!c)return console.debug("No results met reportThreshold"),n(),void 0;if(c){var i=new Date-c;d.push(l+":"+i)}if(t.logMetrics&&console.log("%o=%o",e,d),t.beaconUrl){o.disable();var a={};a[e]=encodeURI(""+d),r({method:"GET",url:t.beaconUrl,params:a}).then(function(){n(),o.enable()})}else n()}var t={logMetrics:!0,reportThreshold:10,beaconUrl:void 0,enabled:!0,reportOnEndView:!1},o="$digest",i=!1,a={},d=[],s=0,l=void 0,c=void 0;this.setOptions=function(n){e.extend(t,n)},this.$get=["$http",function(e){function f(){}return f.disable=function(){t.enabled=!1},f.enable=function(){t.enabled=!0},f.startView=function(e){if(t.enabled){if(l)return console.warn('Called startView "%o" when previous view "%o" not ended'),void 0;n(),l=e,c=new Date}},f.endView=function(){t.enabled&&(l?r(l,e,this):r("markers",e,this))},f.startMarker=function(e){if(t.enabled){if(a.hasOwnProperty(e))return console.warn("Tried to create duplicate active performance marker name: "+e),void 0;if(t.reportOnEndView&&!l)return e!==o&&console.warn('Called startMarker "%o" with reportOnEndView when view not started',e),void 0;a[e]=new Date,s++}},f.endMarker=function(n){if(t.enabled){if(!a.hasOwnProperty(n))return n!==o&&console.warn("Tried to end nonexistent performance marker: "+n),void 0;var c=new Date-a[n];if(c>=t.reportThreshold&&d.push(n+":"+c),delete a[n],s--,!t.reportOnEndView&&0===s){if(i&&n!==o)return;l?r(l,e,this):r("markers",e,this)}}},f.monitorDigest=function(e){if(t.enabled){i=!0;var n=e.$digest,r=this;e.$digest=function(){r.startMarker(o),n.apply(e),r.endMarker(o)}}},f}]})})(window.angular);